rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Użytkownicy: Każdy może czytać, ale tylko właściciel może aktualizować swój profil.
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Okazje (Deals): Każdy może czytać. Tworzenie zablokowane (przez Cloud Function). Edycja/Usuwanie tylko przez autora.
    match /deals/{dealId} {
      allow read: if true;
      allow create: if false; // ZABLOKOWANE! Używamy funkcji 'createDeal'
      allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }
    // PRODUKTY (Krytyczny dodatek: nowa reguła)
    // Zezwól WSZYSTKIM na czytanie produktów (dane publiczne).
    // Zapis będzie kontrolowany przez Panel Admina (później).
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if false;
    }

    // Komentarze: Każdy może czytać. Tworzyć mogą tylko zalogowani. Edycja/Usuwanie tylko przez autora.
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null; // Uproszczone na teraz, docelowo też przez funkcję
      allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }

    // Subkolekcje (przygotowanie pod głosowanie)
    match /deals/{dealId}/votes/{userId} {
       allow read: if true;
       // Zapis tylko dla zalogowanego użytkownika na jego własnym dokumencie głosu
       allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}